{"version":3,"sources":["goku.png","logo.svg","components/handleClicks.js","components/Goku.js","vegeta.png","components/Vegeta.js","frieza.png","components/Frieza.js","components/ErrorBoundary.js","App.js","reportWebVitals.js","index.js"],"names":["handleClicks","WrappedComponent","state","bg","handleClick","name","setState","this","Error","clickHandler","backGround","Component","props","className","onClick","src","goku","alt","vegeta","frieza","ErrorBoundary","hasError","style","color","children","error","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAe,GCAA,I,MDAA,IAA0B,kC,OEyC1BA,EAvCM,SAACC,GAkClB,OAlCuC,4MAInCC,MAAQ,CACJC,GAAI,IAL2B,EAQnCC,YAAc,WAEmB,WAA1BH,EAAiBI,KAChB,EAAKC,SAAS,CACVH,GAAI,cAGR,EAAKG,SAAS,CACVH,GAAI,gBAhBmB,4CAuBnC,WAGI,GAAqB,cAAlBI,KAAKL,MAAMC,GACV,MAAM,IAAIK,MAEd,OAAO,cAACP,EAAD,CAAkBQ,aAAcF,KAAKH,YAAaM,WAAYH,KAAKL,MAAMC,SA7BjD,GAEZQ,cCehBX,I,4JAZX,WAAU,IAAD,EACgCO,KAAKK,MAAlCH,EADH,EACGA,aAAcC,EADjB,EACiBA,WAEtB,OACI,sBAAKG,UAAS,cAASH,GAAvB,UACI,qBAAKI,QAASL,EAAcM,IAAKC,EAAMC,IAAI,WAD/C,IAC2D,8B,GAPpDN,cCLJ,MAA0B,mCCkB1BX,I,4JAZX,WAAU,IAAD,EACgCO,KAAKK,MAAlCH,EADH,EACGA,aAAcC,EADjB,EACiBA,WAEtB,OACI,sBAAKG,UAAS,cAASH,GAAvB,UACI,qBAAKI,QAASL,EAAcM,IAAKG,EAAQD,IAAI,WADjD,IAC6D,8B,GAPpDN,cCJN,MAA0B,mCCoB1BX,I,4JAbX,WAAU,IAAD,EAEgCO,KAAKK,MAAlCH,EAFH,EAEGA,aAAcC,EAFjB,EAEiBA,WAEtB,OACI,sBAAKG,UAAS,cAASH,GAAvB,UACI,qBAAKI,QAASL,EAAcM,IAAKI,EAAQF,IAAI,WADjD,IAC6D,8B,GARpDN,cC6BJS,E,kDAhCb,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDV,MAAQ,CACTmB,UAAU,GAHG,E,0CAkBnB,WACI,OAAId,KAAKL,MAAMmB,SAGP,qBAAKR,UAAU,gBAAf,SACI,mBAAGS,MAAO,CAACC,MAAM,SAAjB,8CAKLhB,KAAKK,MAAMY,Y,uCArBtB,SAAgCC,GAE5B,MAAO,CACHJ,UAAU,O,GAXMK,IAAMf,WCkCnBgB,E,4JAzBb,WACE,OACE,sBAAKd,UAAU,wBAAf,UACI,yDAEA,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,UACE,cAAC,EAAD,MAGF,cAAC,EAAD,UACE,cAAC,EAAD,MAGF,cAAC,EAAD,UACE,cAAC,EAAD,gB,GAjBIF,aCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.48bba48f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/goku.6a4e5959.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\n\nconst handleClicks = (WrappedComponent) => {\n\n    class HandleClicks extends Component {\n\n        state = {\n            bg: ''\n        }\n    \n        handleClick = () => {\n\n            if(WrappedComponent.name === \"Frieza\"){\n                this.setState({\n                    bg: 'bg-danger'\n                })\n            } else{\n                this.setState({\n                    bg: 'bg-success'\n                })\n            }\n            \n        }\n\n        \n        render(){\n\n\n            if(this.state.bg === \"bg-danger\"){\n                throw new Error();\n            }\n            return <WrappedComponent clickHandler={this.handleClick} backGround={this.state.bg}/>\n            \n        }\n    }\n\n    return HandleClicks;\n\n    \n}\n\nexport default handleClicks;","import React , {Component } from 'react';\nimport goku from '../goku.png';\nimport handleClicks from '../components/handleClicks';\n\n\nclass Goku extends Component {\n\n    render() {\n        const { clickHandler, backGround } = this.props;\n\n        return(\n            <div className={`col ${backGround}`}>\n                <img onClick={clickHandler} src={goku} alt=\"frieza\" /> <br />\n\n            </div>\n        )\n    }\n}\n\nexport default handleClicks(Goku);","export default __webpack_public_path__ + \"static/media/vegeta.7e652a8d.png\";","import React , {Component } from 'react';\nimport vegeta from '../vegeta.png'\nimport handleClicks from '../components/handleClicks';\n\nclass Vegeta extends Component {\n\n    render() {\n        const { clickHandler, backGround } = this.props;\n\n        return(\n            <div className={`col ${backGround}`}>\n                <img onClick={clickHandler} src={vegeta} alt=\"vegeta\" /> <br />\n\n            </div>\n        )\n    }\n}\n\nexport default handleClicks(Vegeta);","export default __webpack_public_path__ + \"static/media/frieza.657d1fe3.png\";","import React , {Component } from 'react';\nimport frieza from '../frieza.png';\nimport handleClicks from '../components/handleClicks';\n\n\nclass Frieza extends Component {\n\n    render() {\n\n        const { clickHandler, backGround } = this.props;\n\n        return(\n            <div className={`col ${backGround}`}>\n                <img onClick={clickHandler} src={frieza} alt=\"frieza\" /> <br />\n\n            </div>\n        )\n    }\n}\n\nexport default handleClicks(Frieza);","import React from 'react';\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { \n          hasError: false \n      };\n    }\n  \n    static getDerivedStateFromError(error) { \n           // Mettez à jour l'état, de façon à montrer l'UI de repli au prochain rendu.    \n        return { \n            hasError: true \n        };  \n    }\n  //  componentDidCatch(error, errorInfo) {    \n        // Vous pouvez aussi enregistrer l'erreur au sein d'un service de rapport.   \n        //logErrorToMyService(error, errorInfo);  \n    //}\n\n    render() {\n        if (this.state.hasError) {      \n            // Vous pouvez afficher n'importe quelle UI de repli.      \n            return (\n                <div className=\"col bg-danger\">\n                    <p style={{color:'white'}}> Oups, nous avons un probleme </p>\n                </div>\n            )   \n        }\n\n        return this.props.children;\n    }\n  }\n\n  export default ErrorBoundary;","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport Goku from './components/Goku';\nimport Vegeta from './components/Vegeta';\nimport Frieza from './components/Frieza';\nimport ErrorBoundary from './components/ErrorBoundary';\n\nclass App extends Component {\n  \n  render(){\n    return (\n      <div className=\"container text-center\">\n          <h1>Cliquer sur les gentils</h1>\n\n          <div className=\"row\">\n            <ErrorBoundary >\n              <Frieza />\n            </ErrorBoundary>\n\n            <ErrorBoundary >\n              <Goku />\n            </ErrorBoundary>\n\n            <ErrorBoundary >\n              <Vegeta />\n            </ErrorBoundary>\n            \n          </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}